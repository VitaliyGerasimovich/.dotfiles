# i3 config file (v4)
# vim: set foldmethod=marker
# -----------------------------------------------------------------------------
# Main configuration {{{

# mod-key
set $mod Mod4
set $mode_launcher Launcher

# font
font pango:monospace 9.5

# lock-screen
exec --no-startup-id xautolock -time 10 -locker "i3lock -e -u --color=1D1F21" -detectsleep

# Custom configuration
exec --no-startup-id clipit
# exec --no-startup-id "setxkbmap -model pc86 -layout us,ru -option grp:toggle,caps:escape,altwin:meta_alt,shift:both_capslock_cancel"
exec --no-startup-id picom -f

# background image
exec_always --no-startup-id feh -g 1920x1080 --bg-scale /home/howki/Pictures/background.jpg

# dmenu
bindsym $mod+d exec "dmenu_run -nf '#42C3C9' -nb '#1D1F21' -sb '#1D1F21' -sf '#72E0A0' -fn 'monospace-10' -p 'Howki%'"

# autoback (window)
workspace_auto_back_and_forth yes

# Standard layout
workspace_layout tabbed # default | stacking | tabbed

# Title
title_align center # left | center | right

# }}}
# -----------------------------------------------------------------------------
# Bar {{{
bar {
  position top

  status_command i3blocks

  mode hide
  tray_output none

  colors {
    background #1D1F21
      statusline #1D1F21
      separator #4b5262

      focused_workspace   #2F343F #111111 #72E0A0
      active_workspace    #2F343F #1D1F21 #d8dee8
      inactive_workspace  #2F343F #1D1F21 #42C3C9
      urgent_workspace    #2F343F #ebcb8b #2F343F
  }
}
# }}}
# -----------------------------------------------------------------------------
# color {{{
#                       border  backgr. text    indic.  child_border
client.focused          #42C3C9 #1D1F21 #72E0A0 #2F343F #42C3C9
client.focused_inactive #2F343F #1D1F21 #42C3C9 #2F343F #2F343F
client.unfocused        #2F343F #1D1F21 #42C3C9 #2F343F #2F343F
client.urgent           #2F343F #1D1F21 #42C3C9 #2F343F #2F343F
client.placeholder      #2F343F #1D1F21 #42C3C9 #2F343F #2F343F
client.background       #2F343F

default_border pixel 1
# }}}
# -----------------------------------------------------------------------------
# fn-bind {{{
bindcode 123 exec amixer -q set Master 5%+
bindcode 122 exec amixer -q set Master 5%-
bindcode 121 exec amixer set Master toggle
# }}}
# -----------------------------------------------------------------------------
# launch mode {{{
bindsym $mod+o mode "$mode_launcher"

# Modes
mode "$mode_launcher" {
  bindsym f exec "firefox"
  bindsym m exec "thunderbird"
  bindsym c exec "google-chrome"
  bindsym t exec "alacritty"
  bindsym g exec "telegram-desktop"
  bindsym l exec "libreoffice"

  bindsym Escape mode "default"
  bindsym Return mode "default"
}
# }}}
# -----------------------------------------------------------------------------
# windows configuration {{{
# use these keys for focus, movement, and resize directions when reaching for
# the arrows is not convenient
set $up k
set $down j
set $left h
set $right l

# use Mouse+Mod0 to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec "alacritty --config-file ~/.config/alacritty/alacritty.yml -e tmux new-session -As Howki"
bindsym $mod+q exec "alacritty --class Alacritty,floatAlacritty --config-file ~/.config/alacritty/alacritty.yml"
bindsym $mod+y exec "mate-screenshot"

# kill focused window
bindsym $mod+i kill

# change focus
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+$left move left 35 px
bindsym $mod+Shift+$down move down 35 px
bindsym $mod+Shift+$up move up 35 px
bindsym $mod+Shift+$right move right 35 px

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left 50 px
bindsym $mod+Shift+Down move down 50 px
bindsym $mod+Shift+Up move up 50 px
bindsym $mod+Shift+Right move right 50 px

# split in horizontal orientation
bindsym $mod+Shift+v split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# The middle button and a modifer over any part of the window kills the window
bindsym --whole-window $mod+button2 kill

# focus the parent container
bindsym $mod+a focus parent

# Make the currently focused window a scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the first scratchpad window
bindsym $mod+minus scratchpad show

floating_minimum_size 100 x 40
floating_maximum_size 900 x 400

for_window [class="floatAlacritty"] floating enable
for_window [class=".*"] title_format "<b>%class</b>"

bindsym $mod+c move position 55 ppt 50 ppt

# }}}
# -----------------------------------------------------------------------------
# virtual workspaces {{{
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+Tab workspace number $ws5

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+Tab move container to workspace number $ws5

bindsym $mod+Control+l workspace next
bindsym $mod+Control+h workspace prev

# Assign workspaces
assign [class="Firefox"] $ws1
assign [class="Google-chrome"] $ws2
assign [class="TelegramDesktop"] $ws4
assign [class="Thunderbird"] $ws4
assign [class="libreoffice"] $ws5
# assign [class="Zathura"] $ws2
assign [class="MuPDF"] $ws2

# }}}
# -----------------------------------------------------------------------------
# gaps {{{
gaps inner 25
gaps outer 5

smart_gaps on
smart_borders on

set $mode_gaps Gaps: (o)uter, (i)nner, (h)orizontal, (v)ertical, (t)op, (r)ight, (b)ottom, (l)eft
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_horiz Horizontal Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_verti Vertical Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_top Top Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_right Right Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_bottom Bottom Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_left Left Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym h      mode "$mode_gaps_horiz"
        bindsym v      mode "$mode_gaps_verti"
        bindsym t      mode "$mode_gaps_top"
        bindsym r      mode "$mode_gaps_right"
        bindsym b      mode "$mode_gaps_bottom"
        bindsym l      mode "$mode_gaps_left"
        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_horiz" {
        bindsym plus  gaps horizontal current plus 5
        bindsym minus gaps horizontal current minus 5
        bindsym 0     gaps horizontal current set 0

        bindsym Shift+plus  gaps horizontal all plus 5
        bindsym Shift+minus gaps horizontal all minus 5
        bindsym Shift+0     gaps horizontal all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_verti" {
        bindsym plus  gaps vertical current plus 5
        bindsym minus gaps vertical current minus 5
        bindsym 0     gaps vertical current set 0

        bindsym Shift+plus  gaps vertical all plus 5
        bindsym Shift+minus gaps vertical all minus 5
        bindsym Shift+0     gaps vertical all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_top" {
        bindsym plus  gaps top current plus 5
        bindsym minus gaps top current minus 5
        bindsym 0     gaps top current set 0

        bindsym Shift+plus  gaps top all plus 5
        bindsym Shift+minus gaps top all minus 5
        bindsym Shift+0     gaps top all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_right" {
        bindsym plus  gaps right current plus 5
        bindsym minus gaps right current minus 5
        bindsym 0     gaps right current set 0

        bindsym Shift+plus  gaps right all plus 5
        bindsym Shift+minus gaps right all minus 5
        bindsym Shift+0     gaps right all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_bottom" {
        bindsym plus  gaps bottom current plus 5
        bindsym minus gaps bottom current minus 5
        bindsym 0     gaps bottom current set 0

        bindsym Shift+plus  gaps bottom all plus 5
        bindsym Shift+minus gaps bottom all minus 5
        bindsym Shift+0     gaps bottom all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_left" {
        bindsym plus  gaps left current plus 5
        bindsym minus gaps left current minus 5
        bindsym 0     gaps left current set 0

        bindsym Shift+plus  gaps left all plus 5
        bindsym Shift+minus gaps left all minus 5
        bindsym Shift+0     gaps left all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

# }}}
# -----------------------------------------------------------------------------
# i3 system {{{
# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec i3-msg exit
# lock screen
bindsym $mod+Shift+s exec i3lock -e -u -c 1D1F21

# }}}
# -----------------------------------------------------------------------------
# resize mode {{{
# resize window (you can also use the mouse for that)
mode "resize" {
        bindsym $left       resize shrink width 1 px or 1 ppt
        bindsym $down       resize grow height 1 px or 1 ppt
        bindsym $up         resize shrink height 1 px or 1 ppt
        bindsym $right      resize grow width 1 px or 1 ppt

        bindsym Left        resize shrink width 1 px or 1 ppt
        bindsym Down        resize grow height 1 px or 1 ppt
        bindsym Up          resize shrink height 1 px or 1 ppt
        bindsym Right       resize grow width 1 px or 1 ppt

        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"
# }}}
# -----------------------------------------------------------------------------
